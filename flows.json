[{"id":"3807b068.ea14b","type":"change","z":"df7f2e09.ab29","name":"","rules":[{"t":"set","p":"deviceId","pt":"msg","to":"udp-relay-1886","tot":"str"},{"t":"set","p":"mode","pt":"msg","to":"string","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":320,"y":180,"wires":[["3f8b52f2.07020e"]]},{"id":"821d8501.62105","type":"ibmiot out","z":"df7f2e09.ab29","authentication":"quickstart","apiKey":"","outputType":"evt","deviceId":"a","deviceType":"0.18.6","eventCommandType":"a","format":"json","data":"{}","qos":0,"name":"IBM IoT","service":"quickstart","x":940,"y":120,"wires":[]},{"id":"f3a42ccf.9fc89","type":"udp in","z":"df7f2e09.ab29","name":"1884 as buffer","iface":"","port":"1884","ipv":"udp4","multicast":"false","group":"","datatype":"buffer","x":120,"y":60,"wires":[["98a63aab.bd9518"]]},{"id":"98a63aab.bd9518","type":"change","z":"df7f2e09.ab29","name":"","rules":[{"t":"set","p":"deviceId","pt":"msg","to":"udp-relay-1884","tot":"str"},{"t":"set","p":"mode","pt":"msg","to":"buffer","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":320,"y":60,"wires":[["3f8b52f2.07020e"]]},{"id":"3f8b52f2.07020e","type":"change","z":"df7f2e09.ab29","name":"","rules":[{"t":"set","p":"deviceType","pt":"msg","to":"udpRelay","tot":"str"},{"t":"set","p":"eventOrCommandType","pt":"msg","to":"udp","tot":"str"},{"t":"set","p":"timestamp","pt":"msg","to":"","tot":"date"},{"t":"set","p":"original","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":540,"y":60,"wires":[["9d05a5a1.e18bf","248156b9.6a993a","f491d34c.1557f"]]},{"id":"54945563.5201ec","type":"template","z":"df7f2e09.ab29","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{\n\"portId\": \"{{deviceId}}\",\n\"timestamp\": \"{{timestamp}}\",\n\"originAddress\": \"{{ip}}\",\n\"originPort\":\"{{port}}\",\n\"datamode\":\"{{mode}}\",\n\"data\": \"{{{payload}}}\"\n{{#header}},\n\"nbiotHeader\": \n    {\n        \"deviceId\":\"{{deviceId}}\",\n        \"SIM\": \"{{sim}}\",\n        \"RSSI\": \"{{rssi}}\",\n        \"SEQ\": \"{{seq}}\",\n        \"flags\": \"{{flags}}\"\n    }\n{{/header}}\n}","output":"json","x":740,"y":120,"wires":[["821d8501.62105","80155ae1.41bc78","294b955e.a5d0ba"]]},{"id":"8865e094.aaae6","type":"change","z":"df7f2e09.ab29","name":"","rules":[{"t":"set","p":"deviceId","pt":"msg","to":"udp-relay-1885","tot":"str"},{"t":"set","p":"mode","pt":"msg","to":"base64","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":320,"y":120,"wires":[["3f8b52f2.07020e"]]},{"id":"80155ae1.41bc78","type":"debug","z":"df7f2e09.ab29","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":930,"y":80,"wires":[]},{"id":"109cd19b.cc8006","type":"udp in","z":"df7f2e09.ab29","name":"1885 as base64","iface":"","port":"1885","ipv":"udp4","multicast":"false","group":"","datatype":"base64","x":120,"y":120,"wires":[["8865e094.aaae6"]]},{"id":"294b955e.a5d0ba","type":"file","z":"df7f2e09.ab29","name":"","filename":"/data/udp.log","appendNewline":true,"createDir":false,"overwriteFile":"false","x":950,"y":160,"wires":[]},{"id":"ef29b20f.443618","type":"http in","z":"df7f2e09.ab29","name":"","url":"/showudp","method":"get","upload":false,"swaggerDoc":"","x":120,"y":360,"wires":[["ccbf28e3.fcda"]]},{"id":"ccbf28e3.fcda","type":"file in","z":"df7f2e09.ab29","name":"","filename":"/data/udp.log","format":"utf8","chunk":false,"sendError":false,"x":410,"y":360,"wires":[["191084a1.744b9b"]]},{"id":"43281e6.0873e6","type":"template","z":"df7f2e09.ab29","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{{payload.length}} records found.\n<table>\n    <tr style=\"text-align:left;\">\n        <th>Device/port</th>\n        <th>Timestamp</th>\n        <th>Origin address</th>\n        <th>Origin port</th>\n        <th>deviceID</th>\n        <th>SIM</th>\n        <th>RSSI</th>\n        <th>SEQ</th>\n        <th>flags</th>        \n        <th>Data mode</th>\n        <th>Received payload</th>\n    </tr>\n{{#payload}}\n<tr>\n    <td>{{portId}}</td>\n    <td>{{datetime}}</td>\n    <td>{{originAddress}}</td>\n    <td>{{originPort}}</td>\n    <td>{{nbiotHeader.deviceId}}</td>\n    <td>{{nbiotHeader.SIM}}</td>\n    <td>{{nbiotHeader.RSSI}}</td>\n    <td>{{nbiotHeader.SEQ}}</td>\n    <td>{{nbiotHeader.flags}}</td>\n    <td>{{datamode}}</td>\n    <td>{{{data}}}</td>\n</tr>\n{{/payload}}\n</table>\n","output":"str","x":740,"y":360,"wires":[["27dc96b5.d470f2"]]},{"id":"27dc96b5.d470f2","type":"http response","z":"df7f2e09.ab29","name":"","statusCode":"","headers":{},"x":930,"y":360,"wires":[]},{"id":"191084a1.744b9b","type":"function","z":"df7f2e09.ab29","name":"","func":"var msgArray = msg.payload.split(\"\\n\");\nmsgArray.forEach(function(m,i){\n   if(m !== '') {\n        msgArray[i] = JSON.parse(m);\n        var dt = new Date(msgArray[i].timestamp/1).toISOString();\n        msgArray[i][\"datetime\"]=dt;\n       \n   }\n})\nmsg.payload = msgArray;\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":360,"wires":[["43281e6.0873e6","db0ce018.c67288"]]},{"id":"db0ce018.c67288","type":"debug","z":"df7f2e09.ab29","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":750,"y":400,"wires":[]},{"id":"bf817dd7.a865","type":"exec","z":"df7f2e09.ab29","command":"rm /data/udp.log && touch /data/udp.log","addpay":false,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"","x":500,"y":300,"wires":[[],[],[]]},{"id":"27d54713.7523","type":"inject","z":"df7f2e09.ab29","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":120,"y":300,"wires":[["bf817dd7.a865"]]},{"id":"c6090010.53227","type":"inject","z":"df7f2e09.ab29","name":"","topic":"","payload":"","payloadType":"date","repeat":"600","crontab":"","once":true,"onceDelay":0.1,"x":130,"y":240,"wires":[["eddb2f44.8262d8"]]},{"id":"eddb2f44.8262d8","type":"exec","z":"df7f2e09.ab29","command":"touch /data/udp.log","addpay":false,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"","x":430,"y":240,"wires":[[],[],[]]},{"id":"adef72a.dbb689","type":"udp in","z":"df7f2e09.ab29","name":"1886 as string","iface":"","port":"1886","ipv":"udp4","multicast":"false","group":"","datatype":"utf8","x":110,"y":180,"wires":[["3807b068.ea14b"]]},{"id":"9d05a5a1.e18bf","type":"debug","z":"df7f2e09.ab29","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":710,"y":20,"wires":[]},{"id":"248156b9.6a993a","type":"file","z":"df7f2e09.ab29","name":"","filename":"/data/udp.raw","appendNewline":true,"createDir":false,"overwriteFile":"false","x":760,"y":60,"wires":[]},{"id":"f39814d.22c7668","type":"file in","z":"df7f2e09.ab29","name":"","filename":"/data/udp.raw","format":"lines","chunk":false,"sendError":false,"x":420,"y":440,"wires":[["c61883d2.35eab8","28cbc1fb.f0b006"]]},{"id":"eb707f4a.d3ece","type":"inject","z":"df7f2e09.ab29","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":120,"y":440,"wires":[["f39814d.22c7668"]]},{"id":"c61883d2.35eab8","type":"debug","z":"df7f2e09.ab29","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":730,"y":440,"wires":[]},{"id":"f491d34c.1557f","type":"function","z":"df7f2e09.ab29","name":"","func":"var m = msg.payload.toString('utf8');\n\nvar header = {};\nvar x = m.split(' ');\nmsg.payload = x[0];\nmsg.events = x[1];\nvar h = x[0].split(',');\nif (h.length == 5) {\n    header.deviceId = h[0];\n    header.seq      = h[1];\n    header.flags    = h[2];\n    header.sim      = h[3];\n    header.rssi     = h[4];\n}\nmsg.header = header;\n\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":120,"wires":[["54945563.5201ec"]]},{"id":"a157c3a7.58d658","type":"template","z":"df7f2e09.ab29","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"This is the payload: {{{payload}}} !\n{{#header}}\nID:{{deviceId}}\nSIM: {{sim}}\nSEQ: {{seq}}\nFlags: {{flags}}\nRSSI: {{rssi}}\n{{/header}}","output":"str","x":740,"y":520,"wires":[["e4b7b945.e86f2"]]},{"id":"e4b7b945.e86f2","type":"debug","z":"df7f2e09.ab29","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":930,"y":520,"wires":[]},{"id":"28cbc1fb.f0b006","type":"function","z":"df7f2e09.ab29","name":"","func":"var m = msg.payload.toString('utf8');\nvar header = {};\nvar x = m.split(' ');\nmsg.payload = x[0];\nmsg.events = x[1].split(\"\\n\")[0];\nvar h = x[0].split(',');\nif (h.length == 5) {\n    header.deviceId = h[0];\n    header.seq = h[1];\n    header.flags  = h[2];\n    header.sim = h[3];\n    header.rssi  = h[4];\n}\nmsg.header = header;\n\nreturn msg;","outputs":1,"noerr":0,"x":390,"y":520,"wires":[["fcbf2073.046c4","edac3562.060ea8"]]},{"id":"fcbf2073.046c4","type":"function","z":"df7f2e09.ab29","name":"","func":"var DeviceID = [\"SYS\", \"Ext1\", \"Ext2\",  \"Battery\", \"RH\", \"Temp\", \"IR Temp\", \"Accel\", \"Mag\", \"Lux\", \"Prox\", \"Gas\", \"PIR\", \"PM10\", \"Sound\", \"\"];    // sensor types\n\nvar DataType = [\"CUR\", \"MIN\", \"MAX\", \"AVG\", \"EVT\", \"SEC\"];     // value types, ie current, minimum, maximum, etc\n\nvar ExpArray = [1000, 100, 10, 1, 0.1, 0.01, 0.001, 0.0001];        // multiplier (exponent of power of 10)\n\n\n\n// Process each value from the \n\nfunction ParseValue(strValue)\n\n{\n\n    var result = {};\n\n    var val = parseInt(strValue, 16);               // convert the chunk into an unsigned integer\n\n\n    result.Alarm = (val >> 23) & 0x01;              // this is a flag (0 or 1) to indicate that the value is in alarmed state \n\n    result.DT = DataType[(val >> 20) & 0x07];       // this defines the value type (current, min, max, average, etc)\n\n    result.ID = DeviceID[(val >> 16) & 0x0F];       // this is the measurement type (Battery, Temp, RH, Vibration, etc)\n\n    result.Value = (val & 0xFFF);                   // this is the value mantissa\n\n\n    if (((val >> 12) & 0x01) > 0)\n\n        result.Value = -result.Value;\n\n\n    var exp = ExpArray[(val >> 13) & 0x07];\n\n    result.Value = result.Value * exp;\n\n\n    return result;\n\n}\n\n\nvar message;\n\nvar i, c;\n\nvar values = []; // this holds the values and parameters of each data point\n\nvar pos;\n\n\nvar data;\n\nfunction ascii_to_hexa(str)\n  {\n\tvar arr1 = [];\n\tfor (var n = 0, l = str.length; n < l; n ++) \n     {\n\t\tvar hex = Number(str.charCodeAt(n)).toString(16);\n\t\tarr1.push(hex);\n\t }\n\treturn arr1.join('');\n   }\n   \ndata = ascii_to_hexa(msg.events.slice(1)); // skip the first 00\n\nnode.warn(data);\n\n\n// now we process the data part of the message\n\nmsg.count = 0;\n\n\nfor (i = 0; i < msg.events.length; i += 6)\n\n{\n\n    data = data.substr(i, 6);\n\n    if (data.length == 6)\n\n    {\n\n        values[msg.count] = ParseValue(data);\n\n        msg.count++;\n\n    }\n\n}\n\n\nmsg.values = values;\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":520,"wires":[["a157c3a7.58d658"]]},{"id":"edac3562.060ea8","type":"debug","z":"df7f2e09.ab29","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":550,"y":580,"wires":[]},{"id":"8daa60bf.d63358","type":"exec","z":"df7f2e09.ab29","command":"tail -5 /data/udp.raw","addpay":false,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"","x":180,"y":620,"wires":[["28cbc1fb.f0b006"],[],[]]},{"id":"1a8b7d47.e4bfb3","type":"inject","z":"df7f2e09.ab29","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":100,"y":520,"wires":[["8daa60bf.d63358"]]}]
